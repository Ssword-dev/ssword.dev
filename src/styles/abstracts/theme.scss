@use "sass:map";
@use "sass:meta";

@property --primary-fg {
  syntax: "<color>";
  inherits: true;
  initial-value: #ffffff;
}

@property --primary-bg {
  syntax: "<color>";
  inherits: true;
  initial-value: #1a202c;
}

@property --secondary-fg {
  syntax: "<color>";
  inherits: true;
  initial-value: #2d3748;
}

@property --secondary-bg {
  syntax: "<color>";
  inherits: true;
  initial-value: #edf2f7;
}

@property --tertiary-fg {
  syntax: "<color>";
  inherits: true;
  initial-value: #4a5568;
}

@property --tertiary-bg {
  syntax: "<color>";
  inherits: true;
  initial-value: #f7fafc;
}

@property --base-text-size {
  syntax: "<length>";
  inherits: true;
  initial-value: 1rem;
}

@property --base-container-size {
  syntax: "<length>";
  inherits: true;
  initial-value: 1rem;
}

@property --text-style-bold {
  syntax: "<ident>";
  inherits: true;
  initial-value: bold;
}

@property --text-style-italic {
  syntax: "<ident>";
  inherits: true;
  initial-value: italic;
}

@media (prefers-contrast: more) {
}

@media (prefers-reduced-motion) {
  :root {
    // uses a kinda slanted version of italic
    --text-style-italic: oblique;
  }
}

// Utility function
@function is-map($value) {
  @return meta.type-of($value) == "map";
}

// Theme mixin
@mixin Theme($name, $styles) {
  @if map.has-key($styles, light) {
    @media (prefers-color-scheme: light),
      (prefers-color-scheme: no-preference) {
      body.theme-#{$name} {
        @each $key, $val in map.get($styles, light) {
          --#{$key}: #{$val};
        }
      }
    }
  }

  @if map.has-key($styles, dark) {
    @media (prefers-color-scheme: dark) {
      body.theme-#{$name} {
        @each $key, $val in map.get($styles, dark) {
          --#{$key}: #{$val};
        }
      }
    }
  }

  @if map.has-key($styles, high-contrast) {
    @media (prefers-contrast: more) {
      body.theme-#{$name} {
        @each $key, $val in map.get($styles, high-contrast) {
          --#{$key}: #{$val};
        }
      }
    }
  }
}

body {
  /** initial style override */
}

body.theme-default.theme-default {
  /** default theme override (2 .default makes higher specificity) */
}
