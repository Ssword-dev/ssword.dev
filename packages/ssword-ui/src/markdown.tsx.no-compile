"use client";

import { MDXProvider } from "@mdx-js/react";
import { PropsWithChildren } from "react";
import { useState } from "react";

type MDXComponents = {
  [key in keyof React.JSX.IntrinsicElements]?: React.FC<
    React.JSX.IntrinsicElements[key]
  >;
};
const components: Readonly<MDXComponents> = {
  code(props) {
    // Only show copy button if code block is generated by shiki (className includes 'shiki')
    const [copied, setCopied] = useState(false);
    const isShiki =
      typeof props.className === "string" && props.className.includes("shiki");
    const handleCopy = async () => {
      if (typeof props.children === "string") {
        await navigator.clipboard.writeText(props.children);
        setCopied(true);
        setTimeout(() => setCopied(false), 1500);
      }
    };

    return (
      <span style={{ position: "relative", display: "inline-block" }}>
        <code {...props} />
        {isShiki && (
          <button
            type="button"
            onClick={handleCopy}
            style={{
              position: "absolute",
              top: 2,
              right: 2,
              fontSize: "0.8em",
              padding: "2px 6px",
              cursor: "pointer",
              border: "none",
              background: "#eee",
              borderRadius: "3px",
            }}
            aria-label="Copy code"
          >
            {copied ? "Copied!" : "Copy"}
          </button>
        )}
      </span>
    );
  },
};
const MarkdownPage = ({ children }: PropsWithChildren) => {
  return (
    <MDXProvider components={components}>
      <div className="markdown-ssword-ui h-full w-full" data-slot="markdown">
        {children}
      </div>
    </MDXProvider>
  );
};

export default MarkdownPage;
